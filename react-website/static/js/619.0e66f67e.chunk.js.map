{"version":3,"file":"static/js/619.0e66f67e.chunk.js","mappings":"oQAIA,SAASA,EAAcC,GACrB,IAAQC,EAA2BD,EAA3BC,MAAOC,EAAoBF,EAApBE,SAAUC,EAAUH,EAAVG,MACnBC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACzCJ,GAAK,IACRK,QAAS,CACPC,QAAS,CACPC,KAAMT,QAINU,EAAe,SAAAC,GAAQA,EAALX,MAAYW,EAALT,MAAeS,EAARV,SAAc,OAAAW,EAAAA,EAAAA,GAAAD,EAAAE,EAAQ,CAAvC,CAAyCd,GAC9D,OACEe,EAAAA,EAAAA,KAACC,EAAAA,EAAoB,CAACC,aAAW,EAAAf,UAC/Ba,EAAAA,EAAAA,KAACG,EAAAA,EAAa,CAACf,MAAOC,EAAYF,UAChCa,EAAAA,EAAAA,KAACI,EAAAA,GAAMZ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKI,GAAW,IAAEV,MAAM,UAASC,SACrCA,QAKX,CAMA,KAAekB,EAAAA,EAAAA,MAAKrB,E,kICVpB,SAASsB,EAASC,EAAcC,EAAcpB,GAC5C,OAAImB,EACKnB,EAAMK,QAAQgB,QAAQd,KAE3Ba,EACKpB,EAAMK,QAAQiB,MAAMC,KAEtBvB,EAAMK,QAAQmB,OAAOC,KAC9B,CA0CA,WAAeC,EAAAA,EAAAA,GA9DA,CACbC,OAAQ,CACNC,YAAa,EACbC,YAAa,sBACbC,oBAAqB,EACrBC,uBAAwB,GAE1BC,WAAY,CACVC,OAAQ,SAsDsB,CAAEC,WAAW,GAA/C,EAxCA,SAAkBrC,GAChB,IAAQsC,EAAgEtC,EAAhEsC,OAAQC,EAAwDvC,EAAxDuC,OAAQJ,EAAgDnC,EAAhDmC,WAAYjC,EAAoCF,EAApCE,SAAUsC,EAA0BxC,EAA1BwC,QAASC,EAAiBzC,EAAjByC,MAAOtC,EAAUH,EAAVG,MAC9DuC,GAKIC,EAAAA,EAAAA,IAAY,CACdJ,OAAQA,EACRD,OAAQA,IANRM,EAAYF,EAAZE,aACAC,EAAaH,EAAbG,cACAvB,EAAYoB,EAAZpB,aACAC,EAAYmB,EAAZnB,aAKF,OACEuB,EAAAA,EAAAA,MAACC,EAAAA,GAAGxC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKqC,KAAc,IAAER,OAAO,OAAMlC,SAAA,EACpCa,EAAAA,EAAAA,KAAA,SAAAR,EAAAA,EAAAA,GAAA,GAAWsC,OACX9B,EAAAA,EAAAA,KAAChB,EAAAA,EAAa,CACZiD,WAAS,EACTC,UAAWC,IACTf,EAAaK,EAAQL,WAAa,KAClCK,EAAQV,QAEVqB,QAAQ,WACRlD,MAAOoB,EAASC,EAAcC,EAAcpB,GAC5CsC,MAAOA,EAAMvC,SAEZA,OAIT,G","sources":["shared/components/ColoredButton.js","shared/components/Dropzone.js"],"sourcesContent":["import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, createTheme, ThemeProvider, StyledEngineProvider, adaptV4Theme } from \"@mui/material\";\n\nfunction ColoredButton(props) {\n  const { color, children, theme } = props;\n  const buttonTheme = createTheme(adaptV4Theme({\n    ...theme,\n    palette: {\n      primary: {\n        main: color\n      }\n    }\n  }));\n  const buttonProps = (({ color, theme, children, ...o }) => o)(props);\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={buttonTheme}>\n        <Button {...buttonProps} color=\"primary\">\n          {children}\n        </Button>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n}\n\nColoredButton.propTypes = {\n  color: PropTypes.string.isRequired\n};\n\nexport default memo(ColoredButton);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\nimport classNames from \"classnames\";\nimport { Box } from \"@mui/material\";\nimport withStyles from '@mui/styles/withStyles';\nimport ColoredButton from \"./ColoredButton\";\n\nconst styles = {\n  button: {\n    borderWidth: 1,\n    borderColor: \"rgba(0, 0, 0, 0.23)\",\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0\n  },\n  fullHeight: {\n    height: \"100%\"\n  }\n};\n\nfunction getColor(isDragAccept, isDragReject, theme) {\n  if (isDragAccept) {\n    return theme.palette.success.main;\n  }\n  if (isDragReject) {\n    return theme.palette.error.dark;\n  }\n  return theme.palette.common.black;\n}\n\nfunction Dropzone(props) {\n  const { onDrop, accept, fullHeight, children, classes, style, theme } = props;\n  const {\n    getRootProps,\n    getInputProps,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({\n    accept: accept,\n    onDrop: onDrop\n  });\n  return (\n    <Box {...getRootProps()} height=\"100%\">\n      <input {...getInputProps()} />\n      <ColoredButton\n        fullWidth\n        className={classNames(\n          fullHeight ? classes.fullHeight : null,\n          classes.button\n        )}\n        variant=\"outlined\"\n        color={getColor(isDragAccept, isDragReject, theme)}\n        style={style}\n      >\n        {children}\n      </ColoredButton>\n    </Box>\n  );\n}\n\nDropzone.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  onDrop: PropTypes.func,\n  accept: PropTypes.string,\n  fullHeight: PropTypes.bool,\n  style: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n};\n\nexport default withStyles(styles, { withTheme: true })(Dropzone);\n"],"names":["ColoredButton","props","color","children","theme","buttonTheme","createTheme","adaptV4Theme","_objectSpread","palette","primary","main","buttonProps","_ref","_objectWithoutProperties","_excluded","_jsx","StyledEngineProvider","injectFirst","ThemeProvider","Button","memo","getColor","isDragAccept","isDragReject","success","error","dark","common","black","withStyles","button","borderWidth","borderColor","borderTopLeftRadius","borderBottomLeftRadius","fullHeight","height","withTheme","onDrop","accept","classes","style","_useDropzone","useDropzone","getRootProps","getInputProps","_jsxs","Box","fullWidth","className","classNames","variant"],"sourceRoot":""}